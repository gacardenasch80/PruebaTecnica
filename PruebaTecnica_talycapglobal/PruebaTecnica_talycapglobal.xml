<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PruebaTecnica</name>
    </assembly>
    <members>
        <member name="M:PruebaTecnica.Authorization.IJwt.GetToken(PruebaTecnica.Data.Model.User)">
            <summary>
            Funcion que obtiene el token con jwt
            </summary>
            <param name="user">Objeto user</param>
            <returns>string con token</returns>
        </member>
        <member name="M:PruebaTecnica.Authorization.Jwt.#ctor(Microsoft.Extensions.Options.IOptions{PruebaTecnica.Model.AppSettings})">
            <summary>
            Constructor de la clase Jwt
            </summary>
            <param name="appSettings">Cadena de conexion</param>
        </member>
        <member name="M:PruebaTecnica.Authorization.Jwt.GetToken(PruebaTecnica.Data.Model.User)">
            <summary>
            Funcion que obtiene el token con jwt
            </summary>
            <param name="user">Objeto user</param>
            <returns>string con token</returns>
        </member>
        <member name="T:PruebaTecnica.Controllers.FacturaController">
            <summary>
            Controlador FacturasController
            </summary>
        </member>
        <member name="M:PruebaTecnica.Controllers.FacturaController.#ctor(PruebaTecnica.Service.Server.Interface.IFacturaService)">
            <summary>
            Controller constructor
            </summary>
        </member>
        <member name="M:PruebaTecnica.Controllers.FacturaController.GetAll">
            <summary>
            Returns the complete list of Facturas in the database
            </summary>
            <returns>Factura list</returns>
            <response code="200">Returns the get item</response>
        </member>
        <member name="M:PruebaTecnica.Controllers.FacturaController.GetById(System.Int32)">
            <summary>
            Function to get a Factura by id
            </summary>
            <param name="id">Factura identifier</param>
            <returns>Factura object with the information</returns>
        </member>
        <member name="M:PruebaTecnica.Controllers.FacturaController.Post(PruebaTecnica.Data.Model.Factura)">
            <summary>
            Function to create a new Factura
            </summary>
            <param name="Factura">Rol JSON object with all information</param>
            <returns>Expense type list</returns>
            <response code="200">Returns the get item</response>
            <response code="400">Model is not valid</response>
        </member>
        <member name="M:PruebaTecnica.Controllers.FacturaController.Put(PruebaTecnica.Data.Model.Factura)">
            <summary>
            Function to update a Factura
            </summary>
            <param name="Factura">Rol JSON object with all information to update</param>
            <returns>True if the update is correct; otherwise it is false</returns>
            <response code="200">Returns the get item</response>
            <response code="400">Model is not valid</response>
            <response code="404">Id not found</response>
        </member>
        <member name="M:PruebaTecnica.Controllers.FacturaController.Delete(System.Int32)">
            <summary>
            Function to delete a Factura by id
            </summary>
            <param name="id">Factura by id</param>
            <returns>True if the deletion is correct; otherwise it is false</returns>
            <response code="200">Returns the get item</response>
            <response code="404">Id is not found</response>
        </member>
        <member name="T:PruebaTecnica.Controllers.LoginController">
            <summary>
            Controlador LoginController
            </summary>
        </member>
        <member name="M:PruebaTecnica.Controllers.LoginController.#ctor(PruebaTecnica.Service.Server.Interface.ILoginService,PruebaTecnica.Authorization.IJwt)">
            <summary>
            Controller constructor
            </summary>
        </member>
        <member name="M:PruebaTecnica.Controllers.LoginController.GetLogin(System.String,System.String)">
            <summary>
            Funcion encargada de realizar la validaciones de credenciales en el sistema
            </summary>
            <param name="userName">Nombre de usuarios</param>
            <param name="passWord">Password</param>
            <returns></returns>
        </member>
        <member name="M:PruebaTecnica.Controllers.LoginController.GetUsersCount">
            <summary>
            Funcion que se encarga de devolver la cantidad de usuarios en el sistema
            </summary>
            <returns>Cantidad de usuarios</returns>
        </member>
        <member name="T:PruebaTecnica.Model.AppSettings">
            <summary>
            Clase AppSettings
            </summary>
        </member>
        <member name="P:PruebaTecnica.Model.AppSettings.Secret">
            <summary>
            Semilla para encriptar 
            </summary>
        </member>
        <member name="T:PruebaTecnica.Startup">
            <summary>
            Clase Startup
            </summary>
        </member>
        <member name="M:PruebaTecnica.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Class constructor
            </summary>
            <param name="configuration"></param>
        </member>
    </members>
</doc>
